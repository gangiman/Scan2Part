# @package _global_

# to execute this experiment run:
# python run.py experiment=semseg_full.yaml

defaults:
  - override /trainer: ddp.yaml # choose trainer from 'configs/trainer/'
  - override /model: semantic_segmentation_model.yaml
  - override /datamodule: scannet_dm_sparse.yaml
  - override /callbacks: default.yaml
  - override /logger: wandb.yaml
  - override /transforms: null

logger:
  wandb:
    name: 'semseg_lod_1_wc_new_testonly'

datamodule:
  batch_size: 32

trainer:
  resume_from_checkpoint: /code/logs/runs/2021-08-13/14-59-12/checkpoints/last.ckpt
  max_epochs: 100

callbacks:
  log_confusion_matrix:
    _target_: src.callbacks.metric_callbacks.LogConfusionMatrixAndMetrics
    label_names: /code/data/label_names/map_1800_1.csv
    plot_3d_points_every_n: 16
    head_id: 0
    semantic_key: 'semantic'
  test_semseg_callback:
    _target_: src.callbacks.metric_callbacks.TestingSemSeg
    label_names: /code/data/label_names/map_1800_1.csv
    plot_3d_points_every_n: 50

transforms:
  transforms:
    - _target_: src.datamodules.transforms.ToTensor
      expand_dims: false
    - _target_: src.datamodules.transforms.MapInstancesToSemanticLabels
      labels_mapping: map_1800_1
      mapping_file: /code/data/mappings/all_mappings_v4.csv
      mapped_key: "semantic"
      labels_key: "mask"
      map_bg_to_value: -1
    - _target_: src.datamodules.transforms.PrepareSparseFeatures
      keys_to_sparsify: [ 'semantic' ]
      nnz_key: 'semantic'
      add_color: false
      bg_value: 0